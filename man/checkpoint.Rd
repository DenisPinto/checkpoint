% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkpoint.R
\name{create_checkpoint}
\alias{create_checkpoint}
\alias{use_checkpoint}
\alias{delete_checkpoint}
\alias{delete_all_checkpoints}
\alias{uncheckpoint_session}
\title{Configures R session to use packages as they existed on CRAN at time of snapshot.}
\usage{
create_checkpoint(
  snapshot_date,
  r_version = getRversion(),
  project_dir = ".",
  checkpoint_location = "~",
  mran_url = getOption("checkpoint.mranUrl", "https://mran.microsoft.com"),
  scan_now = TRUE,
  use_now = TRUE,
  scan_r_only = FALSE,
  scan_rnw_with_knitr = TRUE,
  scan_rprofile = TRUE,
  log = TRUE,
  num_workers = NULL,
  config = list(),
  prepend = FALSE,
  ...
)

use_checkpoint(
  snapshot_date,
  r_version = getRversion(),
  checkpoint_location = "~",
  mran_url = getOption("checkpoint.mranUrl", "https://mran.microsoft.com"),
  prepend = FALSE
)

delete_checkpoint(
  snapshot_date,
  r_version = getRversion(),
  checkpoint_location = "~"
)

delete_all_checkpoints(checkpoint_location = "~")

uncheckpoint_session()
}
\arguments{
\item{snapshot_date}{Date of snapshot to use in \code{YYYY-MM-DD} format, e.g. \code{"2014-09-17"}.  Specify a date on or after \code{"2014-09-17"}.  MRAN takes one snapshot per day. To list all valid snapshot dates on MRAN use \code{\link{list_mran_snapshots}}.}

\item{r_version}{Optional character string, e.g. \code{"3.6.2"}.  If specified, compares the current \code{\link{R.version}} to the specified version. If these differ, stops processing with an error, making no changes to the system. Specifically, if the check fails, the library path is NOT modified. This argument allows the original script author to specify a specific version of R to obtain the desired results.}

\item{project_dir}{A project path.  This is the path to the root of the project that references the packages to be installed from the MRAN snapshot for the date specified for \code{snapshotDate}. Defaults to the current working directory.}

\item{checkpoint_location}{File path where the checkpoint library is stored.  Default is \code{"~"}, i.e. the user's home directory. A use case for changing this is to create a checkpoint library on a portable drive (e.g. USB drive), or to create per-project checkpoints. The actual checkpoints will be created under a \code{.checkpoint} directory at this location.}

\item{mran_url}{The base MRAN URL. The default is taken from the system option \code{checkpoint.mranUrl}, or if this is unset, \verb{https://mran.microsoft.com}. Currently checkpoint 1.0 does not support local MRAN mirrors.}

\item{scan_now}{If \code{TRUE}, scans for packages in project folder (see details). If \code{FALSE}, skips the scanning process. Set this to \code{FALSE} if you only want to create the checkpoint subdirectory structure.}

\item{use_now}{If \code{TRUE}, \code{create_checkpoint} calls \code{use_checkpoint} after the checkpoint has been created. Ignored if \code{scan_now=FALSE}.}

\item{scan_r_only}{If \code{TRUE}, limits the scanning of project files to R scripts only (those with the extension ".R").}

\item{scan_rnw_with_knitr}{If \code{TRUE}, scans Sweave files (those with extension ".Rnw") with \code{\link[knitr:knitr]{knitr::knitr}}, otherwise with \code{\link[utils:Stangle]{utils::Stangle}}. Ignored if \code{scan_r_only=TRUE}.}

\item{scan_rprofile}{if \code{TRUE}, includes the \verb{~/.Rprofile} startup file in the scan. See \code{\link{Startup}}.}

\item{log}{If \code{TRUE}, writes logging information (mostly the output from the methods of \code{\link[pkgdepends:pkg_installation_proposal]{pkgdepends::pkg_installation_proposal}}) to the checkpoint directory.}

\item{num_workers}{The number of parallel workers to use for installing packages. Defaults to the minimum of 3 and the number of physical cores on the machine.}

\item{config}{Further configuration parameters to pass to \code{\link[pkgdepends:new_pkg_installation_proposal]{pkgdepends::new_pkg_installation_proposal}}.}

\item{prepend}{If \code{TRUE}, adds the checkpoint directory to the beginning of \code{\link{.libPaths}}. The default is \code{FALSE}, where the checkpoint directory replaces all but the last entry in \code{.libPaths}; this is to reduce the chances of accidentally calling non-checkpointed code. Note that the packages shipped with R itself are never checkpointed, and always remain part of \code{.libPaths}.}

\item{...}{Further object initialisation arguments to pass to \code{\link[pkgdepends:pkg_installation_proposal]{pkgdepends::pkg_installation_proposal}}.}
}
\value{
Checkpoint is called for its side-effects (see the details section), but invisibly returns an object of class \code{pkgdepends::pkg_installation_proposal}.
}
\description{
Together, the checkpoint package and the checkpoint server act as a CRAN time machine.  The \code{checkpoint()} function installs the packages referenced in the specified project to a local library exactly as they existed at the specified point in time.  Only those packages are available to your session, thereby avoiding any package updates that came later and may have altered your results.  In this way, anyone using the checkpoint \code{checkpoint()} function can ensure the reproducibility of your scripts or projects at any time.
}
\section{Details}{


\code{create_checkpoint()} creates a local library into which it installs a copy of the packages required by your project as they existed on CRAN on the specified snapshot date.  Your R session is updated to use only these packages.

To determine the packages used in your project, the function scans all R code (\code{.R}, \code{.Rmd}, \code{.Rnw}, \code{.Rhtml} and \code{.Rpres} files) for \code{\link[=library]{library()}} and \code{\link[=require]{require()}} statements. In addition, it scans for occurrences of code that accesses functions in namespaces using \verb{package[::]foo()} and \verb{package[:::]foo()}.

Specifically, the function will:
\itemize{
\item Create a new local snapshot library to install packages.  By default this library folder is at \verb{~/.checkpoint} but you can modify the path using the \code{checkpointLocation} argument.
\item Update the options for your CRAN mirror and point to an MRAN snapshot using \link{options}\code{(repos)}
\item Scan your project folder for all required packages and install them from the snapshot using \code{\link[pkgdepends:new_pkg_installation_proposal]{pkgdepends::new_pkg_installation_proposal}}
}
}

\section{Resetting the checkpoint}{


To reset the checkpoint, call \code{uncheckpoint_session()}.
}

\section{Last accessed date}{


The \code{\link{create_checkpoint}} function stores a marker in the snapshot folder every time the function gets called. This marker contains the system date, thus indicating the the last time the snapshot was accessed.
}

\examples{
\dontrun{

# Create temporary project and set working directory

example_project <- paste0("~/checkpoint_example_project_", Sys.Date())

dir.create(example_project, recursive = TRUE)
oldwd <- setwd(example_project)


# Write dummy code file to project

cat("library(MASS)", "library(foreach)",
    sep="\n",
    file="checkpoint_example_code.R")


# Create a checkpoint by specifying a snapshot date

library(checkpoint)
checkpoint("2014-09-17")

# Check that CRAN mirror is set to MRAN snapshot
getOption("repos")

# Check that library path is set to ~/.checkpoint
.libPaths()

# Check which packages are installed in checkpoint library
installed.packages()

# cleanup
unlink(example_project, recursive = TRUE)
setwd(oldwd)

}

}
\concept{checkpoint functions}
